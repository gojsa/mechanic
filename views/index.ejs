<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Form</title>
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/tables.css">
    <link rel="stylesheet" href="/css/modal.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>

<body>
    <h1 class="header">Dobro dosli</h1>
    <div action="" class="user-form">
        <div class="form-group">
            <label for="search" class="form-label">Pretrazi Korisnike:</label>
            <input type="text" id="search" name="search" class="form-input" placeholder="ime, prezime, jmbg">
        </div>
        <button type="button" class="form-button" onclick="searchUsers()">Pretrazi</button>
    </div>

    <button id="openCreateModalBtn" class="form-button" onclick="openCreateUserModal()">Registruj novog
        korisnika</button>
    <button id="openAllProductionsBtn" class="form-button" onclick="openAllProductionsPage()">Prikazi sve
        naloge</button>
    <table class="user-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Ime</th>
                <th>Prezime</th>
                <th>JMBG</th>
                <th>Datum rodjenja</th>
                <th>Email</th>
                <th>Broj telefona</th>
                <th>Akcije</th>
            </tr>
        </thead>
        <tbody id="user-table-body">
            <!-- Rows will be inserted here dynamically -->
        </tbody>
    </table>

    <!-- Pagination controls -->
    <div class="pagination">
        <button onclick="prevPage()">Previous</button>
        <span id="page-info"></span>
        <button onclick="nextPage()">Next</button>
    </div>

    <!-- Include the modal content from addUsers.ejs and updateUsers.ejs -->
    <%- include('user/addUsers') %>
        <%- include('user/updateUsers') %>

            <script>
                function openAllProductionsPage() {
                    window.location.href = '/api/productionorder';
                }
                document.addEventListener("keydown", function (event) {
                    if (event.key === "Enter") {
                        searchUsers();
                    }
                });
                // Get the modal
                let createModal = document.getElementById("createUserModal");
                let updateModal = document.getElementById("updateUserModal");

                // Get the button that opens the modal
                let createBtn = document.getElementById("openCreateModalBtn");

                // Get the <span> element that closes the modal
                let createSpan = document.getElementsByClassName("close")[0];
                let updateSpan = document.getElementsByClassName("close")[1];

                // When the user clicks the button, open the modal 
                createBtn.onclick = function () {
                    createModal.style.display = "block";
                }

                // When the user clicks on <span> (x), close the modal
                createSpan.onclick = function () {
                    createModal.style.display = "none";
                }
                updateSpan.onclick = function () {
                    updateModal.style.display = "none";
                }

                // When the user clicks anywhere outside of the modal, close it
                window.onclick = function (event) {
                    if (event.target == createModal) {
                        createModal.style.display = "none";
                    }
                    if (event.target == updateModal) {
                        updateModal.style.display = "none";
                    }
                }

                let currentPage = 1;
                const limit = 25;

                async function fetchUsers(page, search = '') {
                    const response = await fetch(`/api/user/${limit}/${page}?search=${search}`);
                    const data = await response.json();
                    return data;
                }

                async function searchUsers() {
                    const search = document.getElementById('search').value;
                    currentPage = 1;
                    const data = await fetchUsers(currentPage, search);
                    renderTable(data.user);
                    updatePageInfo(data.count);
                }

                function renderTable(users) {
                    const tbody = document.getElementById('user-table-body');
                    tbody.innerHTML = '';
                    users.forEach(user => {
                        const row = `<tr ondblclick="redirectToCarView(${user.user_id})">
            <td>${user.count}</td>
            <td>${user.first_name}</td>
            <td>${user.last_name}</td>
            <td>${user.jmbg}</td>
            <td>${new Date(user.birth_date).toLocaleDateString()}</td>
            <td>${user.email}</td>
            <td>${user.phone_number}</td>
            <td>
                <i class="fa fa-edit" style="font-size:24px;color: lightgreen; cursor: pointer;" onclick='openUpdateUserModal(${JSON.stringify(user)})'></i>
                <i class="fa fa-trash-o" style="font-size:24px; color: red;cursor: pointer;" onclick="deleteUser(${user.user_id})"></i>
            </td>
        </tr>`;
                        tbody.innerHTML += row;
                    });
                }

                function redirectToCarView(userId) {
                    window.location.href = `/api/car/onecar?user_id=${userId}`;
                }
                function updatePageInfo(count) {
                    const pageInfo = document.getElementById('page-info');
                    pageInfo.textContent = `Page ${currentPage} of ${Math.ceil(count / limit)}`;
                }

                async function prevPage() {
                    if (currentPage > 1) {
                        currentPage--;
                        const search = document.getElementById('search').value;
                        const data = await fetchUsers(currentPage, search);
                        renderTable(data.user);
                        updatePageInfo(data.count);
                    }
                }

                async function nextPage() {
                    const search = document.getElementById('search').value;
                    const data = await fetchUsers(currentPage + 1, search);
                    if (data.user.length > 0) {
                        currentPage++;
                        renderTable(data.user);
                        updatePageInfo(data.count);
                    }
                }

                function handleFormSubmit(event) {
                    event.preventDefault();

                }

                async function deleteUser(userId) {
                    if (confirm('Da li ste sigurno da zelite obrisati korisnika?')) {
                        const response = await fetch(`/api/user/${userId}`, {
                            method: 'DELETE'
                        });
                        if (response.ok) {
                            searchUsers();
                        } else {
                            alert('Doslo je do greske');
                        }
                    }

                }

                // Initial load
                searchUsers();
            </script>
</body>

</html>